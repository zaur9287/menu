# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page

GET     /v1/clients                         controllers.ClientController.ClientGet
POST    /v1/clients                         controllers.ClientController.ClientCreate
DELETE  /v1/clients/deleteall               controllers.ClientController.ClientDeleteAll
DELETE  /v1/clients/delete/:id              controllers.ClientController.ClientDelete(id:Int)
DELETE  /v1/clients/pdeleteall              controllers.ClientController.ClientPureDeleteAll
DELETE  /v1/clients/pdelete/:id             controllers.ClientController.ClientPureDelete(id:Int)
PUT     /v1/clients/getclient/:id           controllers.ClientController.ClientGetClient(id:Int)
PUT     /v1/clients/update/:id              controllers.ClientController.ClientUpdate(id: Int)

GET     /v1/companies                         controllers.CompanyController.CompanyGet
POST    /v1/companies                         controllers.CompanyController.CompanyCreate
DELETE  /v1/companies/deleteall               controllers.CompanyController.CompanyDeleteAll
DELETE  /v1/companies/delete/:id              controllers.CompanyController.CompanyDelete(id:Int)
DELETE  /v1/companies/pdeleteall              controllers.CompanyController.CompanyPureDeleteAll
DELETE  /v1/companies/pdelete/:id             controllers.CompanyController.CompanyPureDelete(id:Int)
PUT     /v1/companies/getcompany/:id          controllers.CompanyController.CompanyGetCompany(id:Int)
PUT     /v1/companies/update/:id              controllers.CompanyController.CompanyUpdate(id: Int)

GET     /v1/countries                         controllers.CountryController.CountryGet
POST    /v1/countries                         controllers.CountryController.CountryCreate
DELETE  /v1/countries/deleteall               controllers.CountryController.CountryDeleteAll
DELETE  /v1/countries/delete/:id              controllers.CountryController.CountryDelete(id:Int)
DELETE  /v1/countries/pdeleteall              controllers.CountryController.CountryPureDeleteAll
DELETE  /v1/countries/pdelete/:id             controllers.CountryController.CountryPureDelete(id:Int)
GET     /v1/countries/getcountry/:id          controllers.CountryController.CountryGetCountry(id:Int)
PUT     /v1/countries/update/:id              controllers.CountryController.CountryUpdate(id: Int)

GET     /v1/contacts                         controllers.ContactController.ContactGet
GET     /v1/contacts/:id                     controllers.ContactController.ContactGetByClientID(id:Int)
POST    /v1/contacts                         controllers.ContactController.ContactCreate
DELETE  /v1/contacts/deleteall               controllers.ContactController.ContactDeleteAll
DELETE  /v1/contacts/delete/:id              controllers.ContactController.ContactDelete(id:Int)
DELETE  /v1/contacts/pdeleteall              controllers.ContactController.ContactPureDeleteAll
DELETE  /v1/contacts/pdelete/:id             controllers.ContactController.ContactPureDelete(id:Int)
GET     /v1/contacts/getcontact/:id          controllers.ContactController.ContactGetContact(id:Int)
PUT     /v1/contacts/update/:id              controllers.ContactController.ContactUpdate(id: Int)

GET     /v1/interfaces                         controllers.InterfaceController.interfaceGet
POST    /v1/interfaces                         controllers.InterfaceController.interfaceCreate
DELETE  /v1/interfaces/deleteall               controllers.InterfaceController.interfaceDeleteAll
DELETE  /v1/interfaces/delete/:id              controllers.InterfaceController.interfaceDelete(id:Int)
DELETE  /v1/interfaces/pdeleteall              controllers.InterfaceController.interfacePureDeleteAll
DELETE  /v1/interfaces/pdelete/:id             controllers.InterfaceController.interfacePureDelete(id:Int)
GET     /v1/interfaces/getinterface/:id        controllers.InterfaceController.interfaceGetInterface(id:Int)
PUT     /v1/interfaces/update/:id              controllers.InterfaceController.interfaceUpdate(id: Int)

#training table operations
GET     /v1/trainings                         controllers.TrainingController.Get
POST    /v1/trainings                         controllers.TrainingController.Create
DELETE  /v1/trainings/deleteall               controllers.TrainingController.DeleteAll
DELETE  /v1/trainings/delete/:id              controllers.TrainingController.Delete(id:Int)
DELETE  /v1/trainings/pdeleteall              controllers.TrainingController.PureDeleteAll
DELETE  /v1/trainings/pdelete/:id             controllers.TrainingController.PureDelete(id:Int)
GET     /v1/trainings/getone/:id              controllers.TrainingController.GetOne(id:Int)
PUT     /v1/trainings/update/:id              controllers.TrainingController.Update(id: Int)

#category table operations
GET     /v1/categories                         controllers.CategoryController.Get
POST    /v1/categories                         controllers.CategoryController.Create
DELETE  /v1/categories/deleteall               controllers.CategoryController.DeleteAll
DELETE  /v1/categories/delete/:id              controllers.CategoryController.Delete(id:Int)
DELETE  /v1/categories/pdeleteall              controllers.CategoryController.PureDeleteAll
DELETE  /v1/categories/pdelete/:id             controllers.CategoryController.PureDelete(id:Int)
GET     /v1/categories/getone/:id              controllers.CategoryController.GetOne(id:Int)
PUT     /v1/categories/update/:id              controllers.CategoryController.Update(id: Int)

#participant table operations
GET     /v1/participants                         controllers.ParticipantController.Get
POST    /v1/participants                         controllers.ParticipantController.Create
DELETE  /v1/participants/deleteall               controllers.ParticipantController.DeleteAll
DELETE  /v1/participants/delete/:id              controllers.ParticipantController.Delete(id:Int)
DELETE  /v1/participants/pdeleteall              controllers.ParticipantController.PureDeleteAll
DELETE  /v1/participants/pdelete/:id             controllers.ParticipantController.PureDelete(id:Int)
GET     /v1/participants/getone/:id              controllers.ParticipantController.GetOne(id:Int)
GET     /v1/participants/getbycategory/:id       controllers.ParticipantController.getByCategoryID(id:Int)
PUT     /v1/participants/update/:id              controllers.ParticipantController.Update(id: Int)

#quiz  table operations
GET     /v1/quizzes                         controllers.QuizController.Get
GET     /v1/quizzes/questions/:id           controllers.QuizController.getQuestions(id:Int)
POST    /v1/quizzes                         controllers.QuizController.Create
DELETE  /v1/quizzes/deleteall               controllers.QuizController.DeleteAll
DELETE  /v1/quizzes/delete/:id              controllers.QuizController.Delete(id:Int)
DELETE  /v1/quizzes/pdeleteall              controllers.QuizController.PureDeleteAll
DELETE  /v1/quizzes/pdelete/:id             controllers.QuizController.PureDelete(id:Int)
PUT     /v1/quizzes/update/:id              controllers.QuizController.Update(id: Int)
POST    /v1/quizzes/getids                  controllers.QuizController.getIDS
GET     /v1/quizzes/getone/:id              controllers.QuizController.GetOne(id:Int)
GET     /v1/quizzes/getbycategory/:id       controllers.QuizController.getByCategoryID(id:Int)
GET     /v1/quizzes/getbytraining/:id       controllers.QuizController.getByTrainingID(id:Int)

#question table operations
GET     /v1/questions                         controllers.QuestionController.Get
POST    /v1/questions                         controllers.QuestionController.Create
DELETE  /v1/questions/deleteall               controllers.QuestionController.DeleteAll
DELETE  /v1/questions/delete/:id              controllers.QuestionController.Delete(id:Int)
DELETE  /v1/questions/pdeleteall              controllers.QuestionController.PureDeleteAll
DELETE  /v1/questions/pdelete/:id             controllers.QuestionController.PureDelete(id:Int)
PUT     /v1/questions/update/:id              controllers.QuestionController.Update(id: Int)
GET     /v1/questions/getone/:id              controllers.QuestionController.GetOne(id:Int)
GET     /v1/questions/getbyquiz/:id           controllers.QuestionController.getByQuizID(id:Int)

#answer table operations
GET     /v1/answers                         controllers.AnswerController.Get
POST    /v1/answers                         controllers.AnswerController.Create
DELETE  /v1/answers/deleteall               controllers.AnswerController.DeleteAll
DELETE  /v1/answers/delete/:id              controllers.AnswerController.Delete(id:Int)
DELETE  /v1/answers/deletequestion/:id      controllers.AnswerController.DeleteByQuestionID(id:Int)
DELETE  /v1/answers/pdeleteall              controllers.AnswerController.PureDeleteAll
DELETE  /v1/answers/pdelete/:id             controllers.AnswerController.PureDelete(id:Int)
DELETE  /v1/answers/pdeletequestion/:id     controllers.AnswerController.PureDeleteByQuestionID(id:Int)
PUT     /v1/answers/update/:id              controllers.AnswerController.Update(id: Int)
GET     /v1/answers/getone/:id              controllers.AnswerController.GetOne(id:Int)
GET     /v1/answers/getbyquestion/:id       controllers.AnswerController.getByQuestionID(id:Int)

#sms table operations
POST    /v1/sms/sendmessages                controllers.SMSController.sendMessages
#GET     /v1/front/quiz/:id                  controllers.SMSController.getQuiz(id: String) // { quiz, training, category, seq(questions(seq(answers))) }

GET     /v1/sms/message/:id                 controllers.SMSController.updateOpened(id:String)

#result table operations
PUT     /v1/result/submitresult/:id         controllers.ResultController.SubmitResult(id:String)
PUT     /v2/result/submitresult/:id         controllers.ResultController.SubmitResultTest(id:Int)


# Home page
GET         /                                controllers.ApplicationController.index
GET         /signOut                         controllers.ApplicationController.signOut
GET         /authenticate/:provider          controllers.SocialAuthController.authenticate(provider)

GET         /v1/auth/signUp                          controllers.SignUpController.view
POST        /v1/auth/signUp                          controllers.SignUpController.submit

GET         /v1/auth/signIn                          controllers.SignInController.view
POST        /v1/auth/signIn                          controllers.SignInController.submit

GET         /v1/auth/password/forgot                 controllers.ForgotPasswordController.view
POST        /v1/auth/password/forgot                 controllers.ForgotPasswordController.submit
GET         /v1/auth/password/reset/:token           controllers.ResetPasswordController.view(token: java.util.UUID)
POST        /v1/auth/password/reset/:token           controllers.ResetPasswordController.submit(token: java.util.UUID)
GET         /v1/auth/password/change                 controllers.ChangePasswordController.view
POST        /v1/auth/password/change                 controllers.ChangePasswordController.submit

GET         /v1/auth/account/email/:email            controllers.ActivateAccountController.send(email: String)
GET         /v1/auth/account/activate/:token         controllers.ActivateAccountController.activate(token: java.util.UUID)

# Map static resources from the /public folder to the /assets URL path
#GET         /assets/*file                    controllers.Assets.at(file)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)

